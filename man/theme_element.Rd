% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/theme_element.R
\name{element_col}
\alias{element_col}
\title{Element Style}
\usage{
element_col(col = vars(), align = NULL, width = NULL)
}
\arguments{
\item{col}{Column value to align on from \code{column} variable.}

\item{align}{Alignment to be applied to column. Acceptable values: "left" for
left alignment, "right" for right alignment", or supply a vector of
character(s) to align on. For the case of character alignment, if more than
one character is provided, alignment will be based on the first occurrence
of any of the characters. For alignment based on white space, leading white
spaces will be ignored.}

\item{width}{Width to apply to the column. Acceptable values include a
numeric value, or a character string of numbers ending with either "px" or
"\%", indicating the column width is either n pixels across or \% of the
total table width}
}
\description{
Element Style
}
\details{
Supports alignment and width setting of data value columns (values found in the \code{column} column). Row group and label
columns are left-aligned by default.
}
\examples{

 plan <- col_style_plan(
    element_col(align = "left", width = 100, col = "my_var"),
    element_col(align = "right", width = "200px", col = vars(four)),
    element_col(align = c(".", ",", " "), col = vars(two, three)),
    element_col(width = "25\%", col = c(two, three))
   )

}
\seealso{
\code{\link[=col_style_plan]{col_style_plan()}} for more information on how to combine
element_col()'s together to form a plan.
}
