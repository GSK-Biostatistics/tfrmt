% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tfrmt.R
\name{tfrmt}
\alias{tfrmt}
\title{Table Format}
\usage{
tfrmt(
  tfrmt_obj,
  group = vars(),
  label = quo(),
  param = quo(),
  values = quo(),
  column = vars(),
  title,
  subtitle,
  footer,
  row_grp_plan,
  body_plan,
  col_align_plan,
  col_plan,
  sorting_cols,
  ...
)
}
\arguments{
\item{tfrmt_obj}{a tfrmt object to base this new format off of}

\item{group}{what are the grouping vars of the input dataset}

\item{label}{what is the label column of the input dataset}

\item{param}{what is the param column of the input dataset}

\item{values}{what is the values column of the input dataset}

\item{column}{what is the column names column in the input dataset}

\item{title}{title of the table}

\item{subtitle}{subtitle of the table}

\item{footer}{footers of the table}

\item{row_grp_plan}{plan of the row groups blocking. Takes a \code{row_grp_plan}}

\item{body_plan}{combination and formatting of the input data}

\item{col_align_plan}{how to align columns? left, right, decimal}

\item{col_plan}{a col_plan object which is used to select, rename, and nest
columns}

\item{sorting_cols}{which columns determine sorting of output}

\item{...}{These dots are for future extensions and must be empty.}
}
\description{
tfrmt, or "table format" is a way to pre-define the non-data components of
your tables, and how the data will be handled once added: i.e. title,
footers, headers, span headers, and cell formats. In addition, tfrmt's can be
layered, building from one table format to the next. For cases where only one
value can be used, the newly defined tfrmt accepts the latest tfrmt
}
\examples{

tfrmt_spec <- tfrmt(
  label = label,
  column = column,
  param = param,
  values=value)

tfrmt_spec <- tfrmt(
  label = label,
  column = column,
  param = param,
  values=value,
# Set the formatting for values
  body_plan = body_plan(
    frmt_structure(group_val = ".default", label_val = ".default", frmt_combine("{n} {pct}",
                                                                              n = frmt("xxx"),
                                                                              pct = frmt_when("==100" ~ "(100\%)",
                                                                                              "==0" ~ "",
                                                                                              TRUE ~ frmt("(xx.x \%)"))))
  ),
# Specify column alignment plan
  col_align = col_align_plan(
    element_align(align = c(".",","," "), col = vars(everything()))
  ))

tfrmt_spec <- tfrmt(
  group = group,
  label = label,
  column = column,
  param = param,
  values=value,
  sorting_cols = c(ord1, ord2),
  # specify value formatting
  body_plan = body_plan(
    frmt_structure(group_val = ".default", label_val = ".default", frmt_combine("{n} {pct}",
                                                                                n = frmt("xxx"),
                                                                                pct = frmt_when("==100" ~ "",
                                                                                                "==0" ~ "",
                                                                                                TRUE ~ frmt("(xx.x \%)")))),
    frmt_structure(group_val = ".default", label_val = "n", frmt("xxx")),
    frmt_structure(group_val = ".default", label_val = c("Mean", "Median", "Min","Max"), frmt("xxx.x")),
    frmt_structure(group_val = ".default", label_val = "SD", frmt("xxx.xx")),
    frmt_structure(group_val = ".default", label_val = ".default", p = frmt("")),
    frmt_structure(group_val = ".default", label_val = c("n","<65 yrs","<12 months","<25"), p = frmt_when(">0.99" ~ ">0.99",
                                                                                                          "<0.001" ~ "<0.001",
                                                                                                          TRUE ~ frmt("x.xxx", missing = "")))
  ),
  # remove extra cols
  col_plan = col_plan(-grp,
                      -starts_with("ord") ),
  # Specify column alignment plan
  col_align_plan = col_align_plan(
    element_align(align = c(".",","," "), col = vars(everything()))
  ),

  # Specify row group plan
  row_grp_plan = row_grp_plan(
    row_grp_structure(group_val = ".default", element_block(post_space = " ")),
    label_loc = element_row_grp_loc(location = "column")
  )

)
}
